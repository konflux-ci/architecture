# 0. Support Secrets to be propogated to the multiple Environments.

Date: 2023-03-16

## Status

Provisional

## Context

* As a StoneSoup's component, I would expect to have an ability to securely upload Secret associate it with component and propagate it to the target Environment .
* As a admin user, I would expect StoneSoup provide a place where I can securely upload sensitive information for later use in components on different Environments.


## Decision

### Overview

This proposal builds on the StoneSoup capabilities to provide different Environment for the user's workload https://github.com/redhat-appstudio/book/blob/main/ADR/0008-environment-provisioning.md.

#### 1. Scenario: When a new Environment is defined and StoneSoup's component knows the secret content

1. The stone-component generates secrets with special annotations 'spi.appstudio.redhat.com/upload-secret: secret` and  'spi.appstudio.redhat.com/target-environment: prod`.   This feature is similar to token upload feature https://github.com/redhat-appstudio/service-provider-integration-operator/blob/main/docs/USER.md#uploading-access-token-to-spi-using-kubernetes-secret
2. The spi-controller copies the `Secret` from the user's namespace into permanent storage (AWS secret manager, Vault). Instead of secret controller creates new CR RemoteSecret with same as Secret name, it include target Environment in the spec.
3. The spi-controller copies `Secret` to the target Environment each time then content is updated.

#### 2. Scenario: When a admin user want's to upload secret from UI

1. The UI generate CR RemoteSecret in the namespace
2. The spi-controller provide a links that can be use to upload the 'Secret'
3. The spi-controller copies `Secret` to the target Environment each time then content is updated.


## Consequences

1. Real Secrets has to be some how removed from the target user deployment to ensure that there is no race on creating/removing Secrets between ARGO and spi-controller